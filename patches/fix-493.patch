diff --git a/build/render-html.js b/build/render-html.js
index febd7dd91d156e651836f89dce874a625abc4855..3f1763b775fdfaae5c1fa83560c9bbac37f5abb1 100644
--- a/build/render-html.js
+++ b/build/render-html.js
@@ -5,9 +5,11 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.default = void 0;
 
-const tryResolve = (...args) => {
+var _path = require("path");
+
+const tryRequire = (...args) => {
   try {
-    return require.resolve(...args);
+    return require(...args);
   } catch (err) {
     return false;
   }
@@ -17,35 +19,26 @@ var _default = async ({
   resume,
   themePath
 }) => {
+  var _theme;
+
   const cwd = process.cwd();
-  let path;
+  let theme;
 
   if (themePath[0] === '.') {
-    path = tryResolve(path.join(cwd, themePath), {
-      paths: [cwd]
-    });
-    throw new Error(`Theme ${themePath} could not be resolved relative to ${cwd}`);
+    theme = tryRequire((0, _path.join)(cwd, themePath));
+  } else {
+    theme = tryRequire(themePath);
   }
 
-  if (!path) {
-    path = tryResolve(themePath, {
-      paths: [cwd]
-    });
+  if (!theme && /^[a-z0-9-]+$/i.test(themePath)) {
+    theme = tryRequire(`jsonresume-theme-${themePath}`);
   }
 
-  if (!path && /^[a-z0-9]/i.test(path)) {
-    path = tryResolve(`jsonresume-theme-${themePath}`, {
-      paths: [cwd]
-    });
+  if (!theme) {
+    throw new Error(`theme path ${themePath} could not be resolved. cwd is ${cwd}`);
   }
 
-  if (!path) {
-    throw new Error(`theme path ${themePath} could not be resolved from current working directory`);
-  }
-
-  const theme = require(path);
-
-  if (typeof (theme === null || theme === void 0 ? void 0 : theme.render) !== 'function') {
+  if (typeof ((_theme = theme) === null || _theme === void 0 ? void 0 : _theme.render) !== 'function') {
     throw new Error('theme.render is not a function');
   }
 
